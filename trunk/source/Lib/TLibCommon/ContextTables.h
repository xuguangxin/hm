/* ====================================================================================================================

	The copyright in this software is being made available under the License included below.
	This software may be subject to other third party and 	contributor rights, including patent rights, and no such
	rights are granted under this license.

	Copyright (c) 2010, SAMSUNG ELECTRONICS CO., LTD. and BRITISH BROADCASTING CORPORATION
	All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted only for
	the purpose of developing standards within the Joint Collaborative Team on Video Coding and for testing and
	promoting such standards. The following conditions are required to be met:

		* Redistributions of source code must retain the above copyright notice, this list of conditions and
		  the following disclaimer.
		* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and
		  the following disclaimer in the documentation and/or other materials provided with the distribution.
		* Neither the name of SAMSUNG ELECTRONICS CO., LTD. nor the name of the BRITISH BROADCASTING CORPORATION
		  may be used to endorse or promote products derived from this software without specific prior written permission.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
	THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

 * ====================================================================================================================
*/

/** \file			ContextTables.h
    \brief		Defines constants and tables for SBAC
		\todo     number of context models is not matched to actual use, should be fixed
*/

#ifndef __CONTEXTTABLES__
#define __CONTEXTTABLES__

// ====================================================================================================================
// Constants
// ====================================================================================================================

#define NUM_MV_RES_CTX								10			///< number of context models for motion vector difference
#define NUM_REF_NO_CTX								6				///< number of context models for reference index
#define NUM_DELTA_QP_CTX							4				///< number of context models for dQP
#define NUM_CBF_CTX										4				///< number of context models for CBF
#define NUM_MAP_CTX										16			///< number of context models for sigmap
#define NUM_LAST_CTX									15			///< number of context models for lastbit
#define NUM_ONE_CTX										5				///< number of context models for greater than one
#define NUM_ABS_CTX										5				///< number of context models for magnitude
#define NUM_TMI_CTX										3				///< number of context models for templat matching intra
#define NUM_TRANSFORM_SIZE_CTX				(3+1)		///< number of context models for transform index

// ====================================================================================================================
// Tables
// ====================================================================================================================

// mapping table for mapping 8x8 sigmap to 4x4 sigmap
static const int  pos2ctx_map8x8  []  = { 0,  1,  2,  3,  4,  5,  5,  4,  4,  3,  3,  4,  4,  4,  5,  5,
                                          4,  4,  4,  4,  3,  3,  6,  7,  7,  7,  8,  9, 10,  9,  8,  7,
                                          7,  6, 11, 12, 13, 11,  6,  7,  8,  9, 14, 10,  9,  8,  6, 11,
                                         12, 13, 11,  6,  9, 14, 10,  9, 11, 12, 13, 11 ,14, 10, 12, 14};

// mapping table for mapping 8x8 lastbit to 4x4 lastbit
static const int  pos2ctx_last8x8 []  = { 0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
                                          2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
                                          3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4,
                                          5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  8};

// no-mapping case
static const int  pos2ctx_nomap   []  = { 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15};


// initial probability for split flag
static const Short INIT_SPLIT_FLAG[3][3][2] = {
	// for I slice
	{{-31,37},{-36,42},{-54,49}},
	// for P slice
	{{-32,36},{-47,43},{-21,43}},
	// for B slice
	{{-63,39},{-15,37},{-7,40}}};

// initial probability for skip flag
static const Short INIT_SKIP_FLAG[3][3][2] = {
	// for I slice
	{{0,0},{0,0},{0,0}},
	// for P slice
	{{71,15},{10,33},{-2,39}},
	// for B slice
	{{0,0},{26,32},{38,36}}};

// initial probability for PU size
static const Short INIT_PART_SIZE[3][7][2] = {
	// for I slice
	{{35,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{47,30},{16,31},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{29,31},{-7,34},{0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for AMP split position (X)
static const Short INIT_CU_X_POS[3][7][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{-10,35},{-40,42},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{-3,33},{0,35},{0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for AMP split position (Y)
static const Short INIT_CU_Y_POS[3][7][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{21,31},{-35,41},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{0,0},{-11,37},{0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for prediction mode
static const Short INIT_PRED_MODE[3][2][2] = {
	// for I slice
	{{0,0},{0,0}},
	// for P slice
	{{113,27},{-2,38}},
	// for B slice
	{{-30,42},{0,0}}};

// initial probability for intra direction of luma
static const Short INIT_INTRA_PRED_MODE[3][3][2] = {
	// for I slice
	{{43,27},{-15,38},{-31,37}},
	// for P slice
	{{48,25},{-20,38},{-15,35}},
	// for B slice
	{{0,0},{-3,35},{-44,41}}};

// initial probability for intra direction of chroma
static const Short INIT_CHROMA_PRED_MODE[3][4][2] = {
	// for I slice
	{{0,0},{-29,37},{-98,43},{-55,45}},
	// for P slice
	{{-194,58},{0,0},{-145,49},{-16,41}},
	// for B slice
	{{0,0},{0,0},{0,0},{0,0}}};

// initial probability for temporal direction
static const Short INIT_INTER_DIR[3][4][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{-57,36},{-57,39},{-55,41},{-18,36}}};

// initial probability for motion vector difference
static const Short INIT_MVD[3][20][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{58,29},{0,0},{-25,42},{76,28},{0,0},{27,32},{0,0},{7,36},{-12,40},{0,0},
	 {103,23},{103,28},{10,38},{9,44},{0,0},{92,25},{62,33},{43,34},{-13,46},{0,0}},
	// for B slice
	{{30,32},{0,0},{0,37},{17,35},{0,0},{26,32},{0,0},{-7,38},{0,0},{0,0},
	 {59,30},{72,32},{48,32},{24,40},{0,0},{69,29},{87,30},{38,34},{39,38},{0,0}}};

// initial probability for reference frame index
static const Short INIT_REF_PIC[3][12][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{-26,33},{-35,41},{-18,40},{0,0},{0,8},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for dQP
static const Short INIT_DQP[3][4][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0},{0,0}}};

// initial probability for CBF
static const Short INIT_CBF[3][12][2] = {
	// for I slice
	{{-87,53},{-28,41},{-10,38},{-15,37},{-63,45},{-51,40},{-55,40},{-70,38},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{-76,51},{-29,42},{-30,41},{-24,38},{-73,45},{-19,35},{-56,40},{-187,51},{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0},{-179,55},{0,0},{0,0},{0,0},{-41,15},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for sigmap
static const Short INIT_SIGMAP[3][224][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {-27,40},{-56,40},{-11,33},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {-20,40},{-17,36},{-8,34},{-7,30},{0,0},{40,25},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {55,33},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {-4,40},{-42,42},{-31,41},{-29,37},{-39,38},{3,33},{-128,47},{6,31},{29,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {155,24},{40,31},{80,27},{0,0},{173,12},{191,10},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {-42,45},{-39,42},{-52,44},{-44,40},{-35,41},{-44,42},{0,0},{-48,42},{-25,39},{32,30},{-8,35},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{75,27},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {-15,40},{-7,34},{66,21},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {-9,40},{-10,36},{-14,35},{0,0},{12,28},{-28,36},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {-3,40},{7,36},{-25,39},{-9,32},{-15,35},{9,34},{0,0},{61,23},{14,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {90,27},{-33,41},{-1,37},{-14,35},{-44,42},{3,36},{0,0},{47,30},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for lastbit
static const Short INIT_LAST_FLAG[3][210][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {85,18},{102,14},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {-44,44},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {33,28},{72,20},{117,15},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {18,37},{8,34},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {59,24},{115,14},{101,16},{147,11},{149,10},{228,1},{0,0},{140,14},{181,8},{174,12},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {203,12},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {36,26},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {34,27},{75,19},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {45,27},{72,21},{93,19},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {47,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {27,29},{90,19},{106,17},{149,11},{125,15},{0,0},{0,0},{58,26},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {-26,36},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {9,30},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for greater than one
static const Short INIT_ONE_FLAG[3][70][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {20,32},{0,0},{0,0},{0,0},{-7,29},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {-8,35},{0,0},{0,0},{14,24},{16,26},
	 {0,0},{126,12},{0,0},{0,0},{0,0},
	 {-25,37},{-69,31},{-3,25},{-101,40},{-19,32},
	 {55,27},{0,0},{74,20},{0,0},{0,0},
	 {-73,45},{-112,37},{-101,40},{-40,34},{-37,37},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {2,35},{-32,31},{0,0},{2,29},{-18,32},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {11,33},{0,0},{0,0},{84,14},{-9,30},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {-45,40},{0,0},{0,0},{1,27},{-25,32},
	 {0,0},{351,-18},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{-32,32},{0,0},
	 {0,0},{120,9},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {-5,35},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for coefficient level
static const Short INIT_TCOEFF_LEVEL[3][70][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{15,34},{0,0},{-39,43},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {45,25},{5,33},{52,27},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {-14,33},{-11,35},{-25,37},{0,0},{0,0},
	 {12,30},{0,0},{0,0},{0,0},{0,0},
	 {-83,42},{-56,41},{0,0},{0,0},{0,0},
	 {0,0},{-9,35},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {-116,49},{-12,35},{-87,49},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {-91,44},{0,0},{0,0},{-55,43},{-19,40},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {-115,46},{-26,36},{5,34},{0,0},{0,0},
	 {0,0},{-21,38},{0,0},{0,0},{0,0},
	 {-22,34},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for motion vector predictor index
static const Short INIT_MVP_IDX[3][24][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{17,33},{1,35},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0}},
	// for B slice
	{{38,29},{40,30},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0},
	 {0,0},{0,0},{0,0},{0,0}}};

// initial probability for MPI index
static const Short INIT_MPI_IDX[3][3][2] = {
	// for I slice
	{{85,26},{0,0},{0,0}},
	// for P slice
	{{115,20},{0,0},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0}}};

// initial probability for ROT index
static const Short INIT_ROT_IDX[3][3][2] = {
	// for I slice
	{{1,32},{43,28},{-29,40}},
	// for P slice
	{{3,33},{28,31},{-61,44}},
	// for B slice
	{{0,0},{0,0},{0,0}}};

// initial probability for CIP index
static const Short INIT_CIP_IDX[3][3][2] = {
	// for I slice
	{{-46,36},{-29,35},{-28,37}},
	// for P slice
	{{-37,32},{-56,39},{-29,37}},
	// for B slice
	{{0,0},{0,0},{0,0}}};

// initial probability for EXC value
static const Short INIT_EXTREME_VALUE[3][6][2] = {
	// for I slice
	{{-6,37},{-17,39},{0,36},{35,30},{-3,36},{0,0}},
	// for P slice
	{{42,28},{22,32},{-43,41},{-52,43},{16,32},{13,34}},
	// for B slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for EBC value
static const Short INIT_BAND_COR_VALUE[3][6][2] = {
	// for I slice
	{{0,0},{38,30},{217,10},{0,0},{0,0},{0,0}},
	// for P slice
	{{97,27},{-73,49},{239,6},{0,0},{0,0},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}}};

// initial probability for ALF flag
static const Short INIT_ALF_FLAG[3][3][2] = {
	// for I slice
	{{-4,38},{0,0},{0,0}},
	// for P slice
	{{10,34},{0,0},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0}}};

// initial probability for ALF side information (unsigned)
static const Short INIT_ALF_UVLC[3][3][2] = {
	// for I slice
	{{-46,44},{-7,39},{0,0}},
	// for P slice
	{{-51,44},{33,34},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0}}};

// initial probability for ALF side information (signed)
static const Short INIT_ALF_SVLC[3][3][2] = {
	// for I slice
	{{31,38},{14,34},{137,27}},
	// for P slice
	{{0,0},{9,35},{74,34}},
	// for B slice
	{{0,0},{0,0},{0,0}}};

// initial probability for transform index
static const Short INIT_TRANS_IDX[3][4][2] = {
	// for I slice
	{{0,0},{0,0},{0,0},{0,0}},
	// for P slice
	{{0,0},{38,28},{-54,42},{0,0}},
	// for B slice
	{{0,0},{0,0},{0,0},{0,0}}};

#endif
